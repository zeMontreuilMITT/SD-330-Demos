// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SD_330_Demos.Data;

#nullable disable

namespace SD_330_Demos.Migrations
{
    [DbContext(typeof(SD_330_DemosContext))]
    partial class SD_330_DemosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SD_330_Demos.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("int");

                    b.Property<int>("MediaCollectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("media_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Media");

                    b.HasDiscriminator<string>("media_type").HasValue("Media");
                });

            modelBuilder.Entity("SD_330_Demos.Models.MediaCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mcollection_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MediaCollection");

                    b.HasDiscriminator<string>("mcollection_type").HasValue("MediaCollection");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Album", b =>
                {
                    b.HasBaseType("SD_330_Demos.Models.MediaCollection");

                    b.HasDiscriminator().HasValue("mcollection_album");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Episode", b =>
                {
                    b.HasBaseType("SD_330_Demos.Models.Media");

                    b.Property<DateTime>("AirDate")
                        .HasColumnType("datetime2");

                    b.HasIndex("MediaCollectionId");

                    b.HasDiscriminator().HasValue("media_episode");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Podcast", b =>
                {
                    b.HasBaseType("SD_330_Demos.Models.MediaCollection");

                    b.HasDiscriminator().HasValue("mcollection_podcast");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Song", b =>
                {
                    b.HasBaseType("SD_330_Demos.Models.Media");

                    b.HasIndex("MediaCollectionId");

                    b.HasDiscriminator().HasValue("media_song");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Episode", b =>
                {
                    b.HasOne("SD_330_Demos.Models.Podcast", "Podcast")
                        .WithMany("Episodes")
                        .HasForeignKey("MediaCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Podcast");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Song", b =>
                {
                    b.HasOne("SD_330_Demos.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("MediaCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("SD_330_Demos.Models.Podcast", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
